// ========================================
// STREAMTRACKER - –¢–†–ï–ö–ï–† –ú–ï–î–Ü–ê –ü–û–¢–û–ö–Ü–í
// ========================================
// –¶–µ–π —Ñ–∞–π–ª —Ä–µ–∞–ª—ñ–∑—É—î —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–µ–¥—ñ–∞ –ø–æ—Ç–æ–∫–∞–º–∏
// –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–¢–¨–°–Ø –í: VideoCallInterface.js, RandomChat.js, ChatInterface.js
//
// –ü–†–û–ë–õ–ï–ú–ê, –Ø–ö–£ –í–ò–†–Ü–®–£–Ñ:
// - –ö–∞–º–µ—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞–ª–∞ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥–∑–≤—ñ–Ω–∫—ñ–≤
// - –í–∏—Ç–æ–∫–∏ –ø–∞–º'—è—Ç—ñ —á–µ—Ä–µ–∑ –Ω–µ–æ—á–∏—â–µ–Ω—ñ –º–µ–¥—ñ–∞ –ø–æ—Ç–æ–∫–∏
// - –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–æ—Ç–æ–∫–∞–º–∏ –≤ —Ä—ñ–∑–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
//
// –û–°–ù–û–í–ù–Ü –§–£–ù–ö–¶–Ü–á:
// 1. üìä –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –º–µ–¥—ñ–∞ –ø–æ—Ç–æ–∫—ñ–≤
// 2. üõë –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –∑—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –ø–æ—Ç–æ–∫—ñ–≤
// 3. üßπ –û—á–∏—â–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –≤–∏—Ç–æ–∫–∞–º –ø–∞–º'—è—Ç—ñ
// 4. üìà –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ—Ç–æ–∫—ñ–≤
//
// –ö–õ–Æ–ß–û–í–Ü –ú–ï–¢–û–î–ò:
// - addStream(): –¥–æ–¥–∞—Ç–∏ –ø–æ—Ç—ñ–∫ –¥–æ —Ç—Ä–µ–∫–µ—Ä–∞
// - removeStream(): –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Ç—ñ–∫ –∑ —Ç—Ä–µ–∫–µ—Ä–∞
// - stopAllStreams(): –∑—É–ø–∏–Ω–∏—Ç–∏ –≤—Å—ñ –ø–æ—Ç–æ–∫–∏
// - getActiveStreamCount(): –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ—Ç–æ–∫—ñ–≤

// –ö–ª–∞—Å –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–µ–¥—ñ–∞ –ø–æ—Ç–æ–∫–∞–º–∏
class StreamTracker {
  constructor() {
    // Set –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ—Ç–æ–∫—ñ–≤
    this.activeStreams = new Set();
  }

  // –î–æ–¥–∞—Ç–∏ –ø–æ—Ç—ñ–∫ –¥–æ —Ç—Ä–µ–∫–µ—Ä–∞
  addStream(stream) {
    if (stream && stream.getTracks) {
      this.activeStreams.add(stream);
      // console.log('StreamTracker: Added stream, total active:', this.activeStreams.size);
    }
  }

  // –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Ç—ñ–∫ –∑ —Ç—Ä–µ–∫–µ—Ä–∞
  removeStream(stream) {
    if (stream) {
      this.activeStreams.delete(stream);
      // console.log('StreamTracker: Removed stream, total active:', this.activeStreams.size);
    }
  }

  // –ó—É–ø–∏–Ω–∏—Ç–∏ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ –ø–æ—Ç–æ–∫–∏
  stopAllStreams() {
    // console.log('StreamTracker: Stopping all active streams, count:', this.activeStreams.size);
    
    // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –ø–æ—Ç–æ–∫–∏ —Ç–∞ –∑—É–ø–∏–Ω—è—î–º–æ —ó—Ö —Ç—Ä–µ–∫–∏
    this.activeStreams.forEach(stream => {
      if (stream && stream.getTracks) {
        stream.getTracks().forEach(track => {
          track.stop(); // –ó—É–ø–∏–Ω—è—î–º–æ –∫–æ–∂–µ–Ω —Ç—Ä–µ–∫ (–≤—ñ–¥–µ–æ/–∞—É–¥—ñ–æ)
          // console.log('StreamTracker: Stopped track:', track.kind);
        });
      }
    });
    
    // –û—á–∏—â—É—î–º–æ Set –ø—ñ—Å–ª—è –∑—É–ø–∏–Ω–∫–∏ –≤—Å—ñ—Ö –ø–æ—Ç–æ–∫—ñ–≤
    this.activeStreams.clear();
    // console.log('StreamTracker: All streams stopped and cleared');
  }

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ—Ç–æ–∫—ñ–≤
  getActiveStreamCount() {
    return this.activeStreams.size;
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä —Ç—Ä–µ–∫–µ—Ä–∞ (Singleton pattern)
const streamTracker = new StreamTracker();

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —î–¥–∏–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö —Ñ–∞–π–ª–∞—Ö
export default streamTracker;
